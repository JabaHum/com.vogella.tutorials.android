<section id="librarymodules">
	<title>Custom Android library modules</title>
	<section id="libraryprojects_using">
		<title>Using custom library modules </title>
		<para>
			If an Android application project uses an Android
			library module, the
			Android
			development tools include the code and resources from the
			library
			project into the
			build result of the Android project. This
			means, that
			the components, code and resources of
			the
			library project
			are
			compiled
			and packaged into the
			<filename>.apk</filename>
			file
			of the
			compiled application.
		</para>
		<para>
			Therefore a
			library module
			can be
			considered to
			be a compile-time
			artifact. An Android library module can contain
			Java
			classes,
			Android
			components and
			resources.
			Only assets
			are not supported.
		</para>
		<para>
			To create a library project, set the
			<guilabel>Mark this project as library</guilabel>
			flag in the Android project generation wizard.
		</para>
		
		<para>
			The library project must declare all its components, e.g.,
			<wordasword>activities</wordasword>
			,
			<wordasword>service</wordasword>
			, etc. via the
			<filename>AndroidManifest.xml</filename>
			file. The application
			which uses the library must also declare all the
			used components via
			the
			<filename>AndroidManifest.xml</filename>
			file.
		</para>
	</section>
	
	<section id="libraryoverview_priorities">
		<title>Priorities for conflicting resources</title>
		<para>
			The Android development tools merges the resources of a library
			project with
			the resources of the application project.
			In the case that
			a resource's ID is defined several times, the tools
			select the
			resource
			from the application, or the library with highest
			priority,
			and discard
			the other resource.
		</para>
	</section>
</section>
