<section id="activity_instancestate">
	<title>Activity instance state</title>
	<para>
		<wordasword>Instance state</wordasword>
		of an activity
		which is required to restore the activity to the state
		in which the
		user left
		it. This is non-persistent application data that
		needs to be
		passed between activities restarts during a configuration
		change to
		restore user selections.
		The application is responsible for
		restoring its instance state.
	</para>

	<para>
		Assume for example the user scrolled through a
		<code>ListView</code>
		with thousands of items and the activity is recreated. Loosing the
		position in the list is annoying for the user, hence the position
		should be restored.
	</para>
	<para>
		The
		<code>onSaveInstanceState()</code>
		can be used to store this instance state as a
		<code>Bundle</code>
		. A
		<code>Bundle</code>
		can contain primitive data types, arrays, String and
		objects which are
		of the
		<code>Parcelable</code>
		or
		<code>Serialisable</code>
		type.
	</para>

	<para>
		The persisted
		<code>Bundle</code>
		data
		is passed at restart of the activity
		to the
		<code>onCreate()</code>
		method and
		<code>onRestoreInstanceState()</code>
		as parameter.
	</para>

	<para>
		If you override
		<code>onSaveInstanceState()</code>
		and
		<code>onRestoreInstanceState()</code>
		you should call the super
		implementation of
		it, because the default
		views of Android
		store their
		data
		via a call to
		<code>View.onSaveInstanceState</code>
		from the
		<code>onSaveInstanceState()</code>
		method of the activity.
		For
		example
		<code>EditText</code>
		stores its content via the default call of this method.
	</para>
	<para>
		The
		<code>onRestoreInstanceState()</code>
		or the
		<code>onCreate()</code>
		methods
		can be used to recreate the instance scope of an activity if it
		is
		restarted.
	</para>
	<tip>
		<para>
			Prefer using the
			<code>onRestoreInstanceState()</code>
			method for restoring the instance state. This approach separates the
			initial setup from restoring the state.
		</para>
	</tip>
	<para>
		If the user interacts with an activity and presses the
		<wordasword>Back</wordasword>
		button or if the
		<code>finish()</code>
		method of an activity is called, the activity is removed from the
		current activity stack and recycled. In this case there is no instance
		state to save and the
		<code>onSaveInstanceState()</code>
		method is not called.
	</para>
	<para>
		If the user interacts with an activity and presses the
		<wordasword>Home</wordasword>
		button, the activity instance state must be saved. The
		<code>onSaveInstanceState()</code>
		method is called. If the user
		restarts the application it will resume
		or restart the
		last running activity. If it restarts the activity it
		provides the bundle with the save data
		to the
		<code>onRestoreInstanceState()</code>
		and
		<code>onCreate()</code>
		methods.
	</para>
	<warning>

		<para>
			The
			<code>onSaveInstanceState()</code>
			method
			is
			not called if the user
			presses the
			back
			button. Don't use this
			approach to save
			the
			data which needs to get
			persisted.
		</para>
	</warning>
</section>
