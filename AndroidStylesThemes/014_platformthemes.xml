<section id="platformthemes" role="wrapper">
	<title>Using Android platform themes</title>

	<section id="styling_materialdesign">
		<title>Using material design and design support library</title>
		<para>
			As of API 21 the material design is the new default design you should
			be used.
			<itemizedlist>
				<listitem>
					<para>@android:style/Theme.Material (dark version)</para>
				</listitem>
				<listitem>
					<para>@android:style/Theme.Material.Light (light version)</para>
				</listitem>
				<listitem>
					<para>@android:style/Theme.Material.Light.DarkActionBar</para>
				</listitem>
			</itemizedlist>
		</para>
		<para>
			The design support library provides themes with
			material design
			styles for
			most widgets. This allows you to use material
			design on
			earlier
			releases. See
			<ulink url="https://developer.android.com/training/material/compatibility.html">Maintaining Compatibility</ulink>
			for how to use the new theme in earlier releases.
		</para>
	</section>
	<section id="styling_colorpalette">
		<title>Styling the color palette</title>
		<para>As of material design you can customize the themes base colors.
			The following screenshot shows several of these
			colors.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/materialcolorpalette10.png"/>
				</imageobject>
				<textobject>
					<phrase>Customize the Color Palette</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>The following listing is an example of styling it with different
			colors (defined in your /res/values folder).
		</para>
		<para>
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/material/styles.xml" />
			</programlisting>
		</para>

		<para>
			You can also style the status bar with the
			<parameter>android:statusBarColor</parameter>
			attribute. By default,
			<parameter>android:statusBarColor</parameter>
			inherits the value of
			<parameter>android:colorPrimaryDark</parameter>
			.
		</para>
	</section>

	<section id="styling_stylingindividualviews">
		<title>Styling individual views and view groups</title>
		<para>
			As of Android 5.0 (API 21) you can also assign the
			<parameter>android:theme</parameter>
			for a view. This allows changing the theme for this element and its
			child elements.
		</para>
	</section>

	<section id="styling_bestpractice">
		<title>Common practice for selecting themes</title>
		<para>
			Using the design support library you should use the material design already in older Android versions. You
			might
			also use material
			Google is porting most of their applications to material
			design, so this might
			become the
			natural
			style
			for most users soon.
			Consider inheriting the material
			style
			and
			to customize it.
		</para>

	</section>

</section>