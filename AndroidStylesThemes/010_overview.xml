<section id="androiddesign" role="wrapper">
    <title>Android interface design</title>

    <section id="androiddesign_official">
        <title>Designing Android Applications</title>
        <para>
            The Android user interface design guidelines have changes over
            the
            years. The first big change for designing Android
            applications
            came
            with the Android 3.0 (Honeycomb) release which introduced the
            <wordasword>Holo</wordasword>
            style. The Android 5.0 (Lollipop) release was again a radical change
            with the
            <wordasword>Material</wordasword>
            design. The material design introduces depth into the layout and uses
            much more animations to provide feedback to the
            user.
        </para>
        <para>
            The
            <ulink url="http://developer.android.com/design/index.html">Android
                design pages
            </ulink>
            give a detailed introduction into the design principles of Android
            applications.
        </para>

        <para>
            This page also contains several downloadable resources, e.g. an
            icon
            set for the
            <wordasword>ActionBar</wordasword>
            .
        </para>
    </section>


    <section id="androiddesign_downloadpromotionalmaterial">
        <title>Download design material</title>
        <para>
            The Android design page provides prepared resources and icons. You find the downloads on the
            <ulink url="http://developer.android.com/design/downloads/index.html">Android design download</ulink>
            webpage.
        </para>
        <para>
            If you choose to download and use these icons, select a fitting for
            a refresh action and place it into the
            <filename class="directory">/res/drawable-mdpi</filename>
            folder. Make sure that the filename of your icon is
            <filename>ic_action_refresh</filename>
        </para>
        <warning>
            <para>
                Icon filenames are not allowed to contain special
                character,
                cannot start with a number and must be in lower
                case.
            </para>
        </warning>
    </section>

    <section id="androiddesign_promotionalmaterial">
        <title>Creating promotional material</title>

        <para>
            The
            <ulink url="http://developer.android.com/distribute/tools/promote/device-art.html">Device Art Generator website</ulink>
            allows you to create promotional material of your
            application with a
            nice device frame around it. Simply make a
            screenshot on your device
            and drag it onto the correct device to get
            a nice image for it.
        </para>
        <para>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/deviceart10.png" scale="10" />
                </imageobject>
                <textobject>
                    <phrase>Device art</phrase>
                </textobject>
            </mediaobject>
        </para>
    </section>
    <section id="androiddesign_materialdesign">
        <title>Material design</title>
        <para>
            As of Android 5.0 (Lollipop, or API 21) the Android system support
            <wordasword>Material design</wordasword>
            .
        </para>
        <para>
            Material design is a guide for visual, motion, and interaction
            design. The
            Android platform provides a new theme,
            new widgets and
            new
            API for
            custom shadows and animations.
        </para>
        <para>
            One of the biggest design changes is that material design support
            that views are drawn on top of other views by
            assigning an elevation
            level to them.
            Views define an elevation
            level in
            dp
            (density-independent pixels). To set the
            elevation of a
            view in a
            layout definition, use the
            android:elevation attribute. To
            set the
            elevation of a view in the
            code of an activity, use the
            <code>View.setElevation()</code>
            method. Android draws customizable shadows based on the value of the
            elevation.
        </para>
        <para>Material design also provides improved API for animations and
            defaults lots of user interface with animation
            which should provide
            feedback to the user.
        </para>
    </section>
    <section id="androiddesign_guidelines">
        <title>Android design key principles</title>
        <para>
            For designing great Android applications you should follow the
            following themes.

            <itemizedlist>
                <listitem>
                    <para>Design for touch</para>
                </listitem>
                <listitem>
                    <para>Show only what is needed</para>
                </listitem>
                <listitem>
                    <para>Don't ask for permission for a certain action but allow the
                        user to undo his action
                    </para>
                </listitem>
                <listitem>
                    <para>Only interrupt, if it is important</para>
                </listitem>
                <listitem>
                    <para>Keep messages brief, use pictures</para>
                </listitem>
                <listitem>
                    <para>Never lose your users data</para>
                </listitem>
                <listitem>
                    <para>Allow users to make important things fast</para>
                </listitem>
                <listitem>
                    <para>If is looks the same, it should act the same</para>
                </listitem>
                <listitem>
                    <para>Help users make decisions, but let them have the final say
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <section id="androiddesign_technical">
        <title>Technical means for great Android application design</title>
        <para>
            To design modern and fast reacting Android applications you should
            use the following technologies.

            <itemizedlist>
                <listitem>
                    <para>ActionBar</para>
                </listitem>
                <listitem>
                    <para>Fragments
                    </para>
                </listitem>
                <listitem>
                    <para>Slide gesture for switching between tabs</para>
                </listitem>
                <listitem>
                    <para>Expandable notifications</para>
                </listitem>
                <listitem>
                    <para>Themes based on the Android platform themes</para>
                </listitem>
                <listitem>
                    <para>Provide a home screen widget together with your application
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <section id="androiddesign_bestpractice" role="wrapper">
        <title>Design best practices</title>
        <section id="androiddesign_fast">
            <title>Design for performance</title>
            <para>
                A well designed application should start fast. You should target
                for less than one second in average to start the application.
            </para>
            <para>
                All potentially slow operations should be performed
                asynchronously.
            </para>
        </section>
        <section id="androiddesign_responsive">
            <title>Design for responsiveness</title>
            <para>
                Feedback to the user should be provided instantaneous. Long
                lasting operations should provide feedback to the user that they are
                running.
            </para>

        </section>
        <section id="androiddesign_fresh">
            <title>Design for instant data</title>
            <para>
                Your application should provide, if possible, recent data once the
                user
                starts it. You should therefore use
                <wordasword>services</wordasword>
                to fetch data from external servers to be decoupled from the user
                interface.
            </para>
        </section>

        <section id="androiddesign_energy">
            <title>Design for optimized battery life</title>
            <para>
                Your application should consume as little energy as possible.
                Stop user interface updates and listeners if your application is
                currently not visible.
            </para>
            <para>
                You can listen to relevant events, e.g. if
                power supply is
                plugged
                in
                to perform larger updates.
            </para>
            <para>If you fetch data from an external server you should, if
                appropriate, use the Google push notification service. This allows
                you to access the network only if data is available.
            </para>
        </section>

        <section id="androiddesign_network">
            <title>Design for efficient network access</title>
            <para>
                Your application should avoid unnecessary network access, via
                push notifications. You should also consider the current available
                network. If you are connected to a wireless lane, your application
                can
                download more data.

            </para>

        </section>




    </section>

</section>