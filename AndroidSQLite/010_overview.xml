<section id="overview" role="wrapper">
	<title>SQLite and Android</title>
	<section id="overview_sqlite">
		<title>What is SQLite?</title>
		<para>
			<wordasword>SQLite</wordasword>
			is an Open Source database. SQLite supports standard
			relational
			database features like SQL syntax, transactions
			and prepared
			statements. The database requires limited
			memory at runtime (approx.
			250 KByte) which makes it a good
			candidate from being embedded into
			other runtimes.
		</para>
		<para>
			SQLite
			supports the data types
			<code>TEXT</code>
			(similar to String in
			Java),
			<code>INTEGER</code>
			(similar to long in Java) and
			<code>REAL</code>
			(similar to double
			in Java). All other types must be converted into
			one
			of these fields
			before getting saved in the database.
			SQLite
			itself
			does not validate
			if the types written to the columns are
			actually of
			the defined type, e.g.
			you can write an integer into a
			string
			column and
			vice versa.
		</para>
		<para>
			More information about SQLite can be found on the SQLite website:
			<ulink url="http://www.sqlite.org">http://www.sqlite.org</ulink>
			.
		</para>
	</section>

	<section id="overview_sqliteandroid">
		<title>SQLite in Android</title>
		<para>
			SQLite
			is embedded into every Android device.
			Using
			an
			SQLite
			database
			in Android
			does not
			require a setup procedure or administration
			of the database.
		</para>
		<para>
			You only have to define the SQL statements for creating and
			updating the database. Afterwards the
			database
			is
			automatically managed
			for
			you by
			the Android platform.
		</para>
		<para>
			Access to an SQLite database involves accessing the file system. This
			can be slow. Therefore it is
			recommended to
			perform database operations
			asynchronously.
		</para>


		<para>
			If your
			application creates a database, this database is by default
			saved in
			the
			directory
			<code>DATA/data/APP_NAME/databases/FILENAME</code>
			.
		</para>
		<para>
			The parts of the above directory are constructed based on the
			following rules.
			<code>DATA</code>
			is
			the
			path which the
			<code>Environment.getDataDirectory()</code>
			method
			returns.
			<code>APP_NAME</code>
			is
			your
			application name.
			<code>FILENAME</code>
			is the name you specify in your application code for the
			database.
		</para>

	</section>


</section>