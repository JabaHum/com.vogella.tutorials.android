<section id="layoutoptimization">
	<title>Layout optimization</title>
	<para>
		You should optimize your layout. The following gives an example how to
		use
		<code>FrameLayout</code>
		with an
		<code>ImageView</code>
		and one
		<code>TextView</code>
		to create result despicted in the next screenshot. It uses the
		possibility to position
		the
		<code>TextView</code>
		in the layout and to style parts of its text content differently.
	</para>
	<para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="images/spannablestring10.png" scale="30" />
			</imageobject>
			<textobject>
				<phrase>Styling TextView with TextAppearanceSpan</phrase>
			</textobject>
		</mediaobject>
	</para>
	<para>
		Create a project called
		<wordasword>com.vogella.android.textview.spannablestring</wordasword>
		.
	</para>
	<para>
		Add two news styles to your
		<filename>styles.xml</filename>
		file.
	</para>

	<para>
		<programlisting language="java">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="../examples/layoutopt/styles.xml" />
		</programlisting>
	</para>
	<para>Create the following layout. </para>
	<para>
		<programlisting language="xml">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="../examples/layoutopt/activity_main.xml" />
		</programlisting>
	</para>
	<para>
		Style your text in the
		<code>TextView</code>
		via separate
		<code>TextAppearanceSpan</code>
		as demonstrated in the following code.
	</para>

	<para>
		<programlisting language="java">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="../examples/layoutopt/MainActivity.java" />
		</programlisting>
	</para>
	<para>
		The resulting layout is much faster than a layout based on
		<code>RelativeLayout</code>
		. Also HTML styling was avoid as the HTML parser is relatively
		expensive.
	</para>
</section>