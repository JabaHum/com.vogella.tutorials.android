<section id="actionbar_dynamic" role="wrapper">
	<title>Making the action bar dynamic
	<section id="menu_customviews">
		<title>Custom views in the action bar
		
			You can also add a custom
			view
			to the action bar, for example, a
			button or a text field.
		
		
			For this you use the
			`setCustomView`
			method of the
			`ActionView`
			class. You also have to enable the display of custom views via the
			`setDisplayOptions()`
			method by passing in the
			`ActionBar.DISPLAY_SHOW_CUSTOM`
			flag.
		
		
			For example, you can define a layout file which contains a
			`EditText`
			element.
		
		
			<programlisting language="xml">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/actionbar/actionbar_view.xml" />
			</programlisting>
		


		This layout can be assigned in an activity to the action bar via
			the following
			code. The example code also
			attaches a listener to the
			custom view.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/actionbar/custom.java" />
			</programlisting>
		

	</section>

	<section id="actionbar_actionview">
		<title>Action view
		
			An
			_action view _
			is a widget that appears in the
			_action bar_
			as a
			substitute for an
			action item's button.
			You can, for example, use
			this
			feature to replace
			an
			_action item_
			with a
			`ProgressBar`
			view. An
			_action view_
			for an action can be defined via the
			`android:actionLayout`
			or
			`android:actionViewClass`
			attribute to specify either a layout
			resource or widget class to use.
		
		
		
			This replacement is depicted in the following screenshots.
		
		
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/actionview10.png"/>
				</imageobject>
				<textobject>
					<phrase>Before activating the ActionView</phrase>
				</textobject>
			</mediaobject>
		

		
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/actionview20.png"/>
				</imageobject>
				<textobject>
					<phrase>ActionViews running</phrase>
				</textobject>
			</mediaobject>
		

		
			The following activity
			replaces the icon at runtime with an
			_action view_
			which contains a
			`ProgressBar`
			view.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/actionview/MainActivity.java" />
			</programlisting>
		
		
			The following code shows the layout used for the
			_action view_
			.
		
		
			<programlisting language="xml">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/actionview/progressbar.xml" />
			</programlisting>
		


		
			The following code shows the XML files for the menu.
		

		
			<programlisting language="xml">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/actionview/activity_main.xml" />
			</programlisting>
		


	</section>



</section>
