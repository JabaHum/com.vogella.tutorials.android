<section id="service" role="wrapper">
	<title>Android Services</title>
	<section id="service_overview">
		<title>What are services?</title>
		<para>
			A
			<wordasword>service</wordasword>
			is a component which runs in the background without direct
			interaction
			with
			the user. As the service has no user
			interface, it is
			not bound to the lifecycle of an activity.
		</para>
		<para>Services are used for repetitive and potentially long running
			operations, i.e., Internet downloads, checking for
			new data, data
			processing, updating content providers and the like.
		</para>
		<para>
			Services
			run with a higher priority than inactive or invisible
			activities
			and therefore it is less likely that the
			Android system
			terminates
			them. Services can also be configured to be restarted if
			they get terminated by the Android
			system once sufficient system
			resources are available again.
		</para>

		<para>
			It is possible to assign services the same priority as
			foreground activities. In this case it is required to have
			a visible
			notification active for the related service. It is frequently used
			for services which play videos or music.
		</para>

	</section>
	<section id="service_backgroundprocessing">
		<title>Services and background processing</title>
		<para>
			By default, a
			service
			runs in the same process as the main thread
			of the application.
		</para>
		<para>
			Therefore, you need to use asynchronous processing in the
			service
			to
			perform
			resource intensive tasks
			in
			the
			background. A
			commonly used pattern
			for a service implementation is to create and run a new
			<code>Thread</code>
			in the service to perform the processing in the background and then
			to terminate the service once it has finished the
			processing.
		</para>
		<para>
			Services
			which run in the process of the application are sometimes
			called
			local
			<code>services</code>
			.
		</para>
	</section>
	<section id="service_system">
		<title>Platform service and custom services</title>
		<para>
			The Android platform provides and runs
			predefined system services and
			every Android application can use
			them, given the
			right permissions.
			These system services are
			usually
			exposed via
			a specific Manager
			class. Access to them
			can be
			gained via
			the
			<code>getSystemService()</code>
			method. The
			<code>Context</code>
			class defines several constants for accessing these services.
		</para>
		<para>
			An Android application can, in addition to consuming the
			existing
			Android platform services, define and use new
			services.
			Defining your custom
			services
			allows you to design responsive
			applications. You can fetch the
			application data
			via it
			and once the
			application is started by the user, it can present fresh
			data to the
			user.
		</para>
	</section>

	<section id="service_starting">
		<title>Starting and defining custom services</title>
		<para>
			Custom services are started from other Android components, i.e.,
			activities, broadcast receivers and other
			services.
		</para>
	</section>

	<section id="service_startingasforegroundservice">
		<title>Foreground services</title>
		<para>
			A foreground service is a service that should have the same priority as an active activity and therefore should
			not be killed by the Android system, even if the system is low on
			memory. A foreground service must provide a
			notification for the status
			bar, which is placed under the "Ongoing" heading,
			which means that the notification cannot
			be dismissed unless the
			service is either stopped or removed from the
			foreground.
		</para>

		<para>
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text"
					href="./examples/foreground/StartForegroundService.java" />
			</programlisting>
		</para>


	</section>

</section>